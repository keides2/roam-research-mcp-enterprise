企業ネットワーク環境の制約とローカルMCPサーバーの挑戦 - Roam Research MCP Server の壁

企業のネットワークインフラには、セキュリティ確保のための多層的なポリシー制約が存在します。
Roam Researchは、社内情報システム部門（DKI）から正式に利用承認を得ているマルチプラットフォーム対応アプリケーション（Windows PC、Android、iPhone）です。

この優れたツールの活用範囲を拡大すべく、自宅環境で構築・検証済みのRoam Research MCP Serverを企業環境においても導入することを試みました。しかし、各種ネットワーク設定の調整を重ねても接続が確立されません。

そこで、コミュニティ開発版のRoam Research MCP Serverを独自にフォークし、企業環境特化のソースコード改修を実施しましたが、それでもなお接続の問題は解決されませんでした。

詳細な調査により、根本原因が明らかになりました。
本家 Roam Research が開発した API がプロキシーに対応していませんでした。
本家 Roam Research が提供するAPIへの接続時に、以下の技術的問題が発生していました：

1. **DNS制限**: 企業ファイアウォールが外部DNS解決を制限し、`nslookup roamresearch.com` で `DNS request timed out` が発生（自宅では `64.239.123.129`, `64.239.123.65` に解決されるが、企業環境では名前解決自体が遮断）
2. **SDK内プロキシ非対応**: Node.js版Roam API SDKが `HTTP_PROXY`/`HTTPS_PROXY` 環境変数を内部のHTTP Client設定に反映せず、企業プロキシ（ポート3128）を迂回して直接接続を試行
3. **結果**: `MCP error -32603: Roam API error: fetch failed` で全APIアクセスが遮断

curl経由では同じAPIに接続できるため、問題はSDKレベルのプロキシ実装不備であることが判明。これがローカルMCPサーバーの限界です。

Roam Research 社にはプロキシーに対応するよう要求しましたが、いつ対応してくれるのかわからないので、次の対策を考えています。
→　ローカルMCPサーバーがだめならラムダを使ったリモートMCPサーバーを構築する

実施内容をまとめた顛末記（機密情報サニタイズ前バージョン）を添付します。

※同時期に自作したCoverity Connect MCP Server と、FututeVuls MCP Server のAPIは、プロキシーの問題なくつながります
